<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.FedGroupMapper">

    <resultMap type="FedGroup" id="FedGroupResult">
        <result property="groupId"    column="group_id"    />
        <result property="groupName"    column="group_name"    />
        <result property="createBy"    column="create_by"    />
        <result property="userId2"     column="user_id2"   />
    </resultMap>

    <resultMap id="FedGroupUserGroupResult" type="FedGroup" extends="FedGroupResult">
        <collection property="userGroupList" notNullColumn="sub_group_id" javaType="java.util.List" resultMap="UserGroupResult" />
    </resultMap>

    <resultMap type="UserGroup" id="UserGroupResult">
        <result property="groupId"    column="sub_group_id"    />
        <result property="userId"    column="sub_user_id"    />
        <result property="userName"    column="sub_user_name"    />
    </resultMap>

    <sql id="selectFedGroupVo">
        select fg.group_id, fg.group_name, fg.create_by from fed_group fg left join user_group ug on fg.group_id = ug.group_id
    </sql>

    <select id="selectFedGroupList" parameterType="FedGroup" resultMap="FedGroupResult">
        <include refid="selectFedGroupVo"/>
        <where>
            <if test="groupName != null  and groupName != ''"> and fg.group_name like concat('%', #{groupName}, '%')</if>
            <if test="userId2 != null  and userId2 != ''"> and ug.user_id = #{userId2}</if>
            <if test="createBy != null  and createBy != ''"> and fg.create_by like concat('%', #{createBy}, '%')</if>
        </where>
    </select>

    <select id="selectFedGroupByGroupId" parameterType="Long" resultMap="FedGroupUserGroupResult">
        select a.group_id, a.group_name, a.create_by,
               b.group_id as sub_group_id, b.user_id as sub_user_id, b.user_name as sub_user_name
        from fed_group a
                 left join user_group b on b.group_id = a.group_id
        where a.group_id = #{groupId}
    </select>

    <insert id="insertFedGroup" parameterType="FedGroup" useGeneratedKeys="true" keyProperty="groupId">
        insert into fed_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="groupName != null">group_name,</if>
            <if test="createBy != null">create_by,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="groupName != null">#{groupName},</if>
            <if test="createBy != null">#{createBy},</if>
        </trim>
    </insert>

    <update id="updateFedGroup" parameterType="FedGroup">
        update fed_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="groupName != null">group_name = #{groupName},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
        </trim>
        where group_id = #{groupId}
    </update>

    <delete id="deleteFedGroupByGroupId" parameterType="Long">
        delete from fed_group where group_id = #{groupId}
    </delete>

    <delete id="deleteFedGroupByGroupIds" parameterType="String">
        delete from fed_group where group_id in
        <foreach item="groupId" collection="array" open="(" separator="," close=")">
            #{groupId}
        </foreach>
    </delete>

    <delete id="deleteUserGroupByGroupIds" parameterType="String">
        delete from user_group where group_id in
        <foreach item="groupId" collection="array" open="(" separator="," close=")">
            #{groupId}
        </foreach>
    </delete>

    <delete id="deleteUserGroupByGroupId" parameterType="Long">
        delete from user_group where group_id = #{groupId}
    </delete>

    <insert id="batchUserGroup">
        insert into user_group( group_id, user_id, user_name) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.groupId}, #{item.userId}, #{item.userName})
        </foreach>
    </insert>
</mapper>